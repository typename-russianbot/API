#pragma once
#include "../Objects/Textbox.h"

//& Class - Button : public Textbox
class Button : public Textbox {
private:
  //&* Trackers
  Color highlight_color;   //&* @var: highlight_color
  bool button_highlighted; //&* @var: button_highlighted

protected:
public:
  // TODO: Resources //
  //////////////////////////////////////////////////////////////////////////////////
  //* @public: Button(const string, const Color, const Vector2f)
  //* @def: Constructor
  Button(const string = "Sample Text", const Color = white,
         const Vector2f = {_DisplayWidth, _DisplayHeight});
  //////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////////
  //* @public: ~Button(void)
  //* @def: Destructor
  ~Button(void);
  //////////////////////////////////////////////////////////////////////////////////

  // TODO: Mutators //
  //////////////////////////////////////////////////////////////////////////////////
  //* @public: setHighlightColor(const Color)
  //* @def: alters the color stored in 'highlight_color'
  void setHighlightColor(const Color);
  //////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////////
  //* @public: toggleHighlight(const bool)
  //* @def: toggles highlight true or false (based on param)
  void toggleHighlight(const bool);
  //////////////////////////////////////////////////////////////////////////////////

  // TODO: Accessors //
  //////////////////////////////////////////////////////////////////////////////////
  //* @public: isHighlighted(void)
  //* @def: returns true if 'button_highlighted' is true, false otherwise
  bool isHighlighted(void);
  //////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////////
  //* @public: inLocalBounds(const Vector2f)
  //* @def: returns true if Vector2f is within global bounds
  bool inLocalBounds(const Vector2f);
  //////////////////////////////////////////////////////////////////////////////////
};
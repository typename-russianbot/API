#include "../includes/Objects/Board.h"
#include <SFML/Graphics/RenderWindow.hpp>

// TODO: Resources
////////////////////////////////////////////////////////////////////////////////////////
//* @public: Board()
Board::Board(void) { return; }
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
//* @public: ~Board(void)
Board::~Board(void) { return; }
////////////////////////////////////////////////////////////////////////////////////////

// TODO: Functions
////////////////////////////////////////////////////////////////////////////////////////
//* @public: draw(RenderWindow&)
void Board::draw(RenderWindow &window) {
  if (isVisible()) {
    for (int i = 0; i < 8; i++) {
      for (int j = 0; j < 8; j++) {
        tiles[i][j].draw(window);
      }
    }
  }

  return;
}
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
//* @public: move(const Vector2f)
void Board::move(const Vector2f position) { return; }
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
//* @public: show(void)
void Board::show(void) {
  board_visible = true;
  for (int i = 0; i < 8; i++) {
    for (int j = 0; j < 8; j++) {
      tiles[i][j].show();
    }
  }

  return;
}
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
//* @public: hide(void)
void Board::hide(void) {
  board_visible = false;
  for (int i = 0; i < 8; i++) {
    for (int j = 0; j < 8; j++) {
      tiles[i][j].hide();
    }
  }

  return;
}
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
//* @public: resize(const unsigned int)
void Board::resize(const unsigned int) { return; }
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
//* @public: invert(void)
void Board::invert(void) {
  Color temp = color1;
  color1 = color2;
  color2 = temp;



  return;
}
////////////////////////////////////////////////////////////////////////////////////////

// TODO: Mutators

// TODO: Accessors
////////////////////////////////////////////////////////////////////////////////////////
//* @public: isVisible(void)
bool Board::isVisible() {
  if (board_visible)
    return true;

  return false;
}
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
//* @public:
////////////////////////////////////////////////////////////////////////////////////////
